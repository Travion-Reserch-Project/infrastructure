name: Deploy ML Services

on:
  push:
    branches: [main, develop]
    paths:
      - "ml-services/**"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: travion-ml-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./ml-services/transport-service
          file: ./ml-services/transport-service/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy-dev:
    needs: build-and-push
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Deploy to Development Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ${{ secrets.DEV_SERVER_USER }}
          key: ${{ secrets.DEV_SERVER_SSH_KEY }}
          script: |
            cd /opt/travion
            docker-compose -f infrastructure/compose/docker-compose.dev.yml pull ml-service
            docker-compose -f infrastructure/compose/docker-compose.dev.yml up -d ml-service

  deploy-prod:
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USER }}
          key: ${{ secrets.PROD_SERVER_SSH_KEY }}
          script: |
            cd /opt/travion
            docker-compose -f infrastructure/compose/docker-compose.prod.yml pull ml-service
            docker-compose -f infrastructure/compose/docker-compose.prod.yml up -d ml-service
