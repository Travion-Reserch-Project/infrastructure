stages:
  - build
  - test
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

build-backend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA -f travion-backend/Dockerfile travion-backend/
    - docker push $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA

build-ml-service:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $CI_REGISTRY_IMAGE/ml-service:$CI_COMMIT_SHORT_SHA -f ml-services/transport-service/Dockerfile ml-services/transport-service/
    - docker push $CI_REGISTRY_IMAGE/ml-service:$CI_COMMIT_SHORT_SHA

deploy-dev:
  stage: deploy
  only:
    - develop
  script:
    - ssh $DEV_SERVER_USER@$DEV_SERVER_HOST "cd /opt/travion && docker-compose -f infrastructure/compose/docker-compose.dev.yml pull && docker-compose -f infrastructure/compose/docker-compose.dev.yml up -d"

deploy-prod:
  stage: deploy
  only:
    - main
  when: manual
  script:
    - ssh $PROD_SERVER_USER@$PROD_SERVER_HOST "cd /opt/travion && docker-compose -f infrastructure/compose/docker-compose.prod.yml pull && docker-compose -f infrastructure/compose/docker-compose.prod.yml up -d"
